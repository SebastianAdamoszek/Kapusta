{"version":3,"file":"static/js/274.d84893e3.chunk.js","mappings":"+VAEO,MAAMA,EAAiBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6dAqB3BC,EAA2BJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gaAsBrCG,EAAiBN,EAAAA,GAAOC,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,uGAQ3BK,EAA6BR,EAAAA,GAAOC,IAAGQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iX,sBCrBpD,MA+DA,EA/DiBO,KACf,MAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAOF,EAAAA,EAAAA,IAAYG,EAAAA,IACnBC,GAAUJ,EAAAA,EAAAA,IAAYK,EAAAA,KAGtB,aAAEC,EAAY,aAAEC,EAAY,cAAEC,IAAkBC,EAAAA,EAAAA,KAEhDC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,KACJV,GACFL,GAASgB,EAAAA,EAAAA,MACX,GACC,CAAChB,EAAUK,EAAME,KAGlBU,EAAAA,EAAAA,MAACC,EAAAA,GAAc,CAAAC,SAAA,EACbC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAAAF,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,gBAETC,EAAAA,EAAAA,KAACE,EAAAA,EAAc,IACdb,IAAgBW,EAAAA,EAAAA,KAACG,EAAAA,EAAmB,KACrCN,EAAAA,EAAAA,MAACtB,EAAc,CAAAwB,SAAA,EACbF,EAAAA,EAAAA,MAACpB,EAA0B,CAAAsB,SAAA,CACxBV,IACCW,EAAAA,EAAAA,KAACI,EAAAA,EAAW,CAACC,GAAG,WAAWC,MAAO,CAAEC,KAAMd,MAE5CO,EAAAA,EAAAA,KAACQ,EAAAA,EAAW,KACVnB,IACAW,EAAAA,EAAAA,KAACI,EAAAA,EAAW,CAACC,GAAG,WAAWC,MAAO,CAAEC,KAAMd,QAG7CJ,IAAgBW,EAAAA,EAAAA,KAACS,EAAAA,EAAoB,IAErCpB,IAAgBW,EAAAA,EAAAA,KAACU,EAAAA,EAAgB,QAEpCb,EAAAA,EAAAA,MAAC7B,EAAc,CAAA+B,SAAA,CACZ,KACCV,IAAgBW,EAAAA,EAAAA,KAACW,EAAAA,EAAqB,KACxCX,EAAAA,EAAAA,KAACY,EAAAA,EAAI,IACJvB,GACCQ,EAAAA,EAAAA,MAACgB,EAAAA,EAAqB,CAAAd,SAAA,CACnBjB,EAvCG,UA2CNe,EAAAA,EAAAA,MAACxB,EAAwB,CAAA0B,SAAA,EACvBF,EAAAA,EAAAA,MAACiB,EAAAA,EAAsB,CAAAf,SAAA,CACpBjB,EA7CC,SAgDHS,IAAiBS,EAAAA,EAAAA,KAACe,EAAAA,EAAO,UAI/BzB,IAAgBU,EAAAA,EAAAA,KAACe,EAAAA,EAAO,MACV,C","sources":["pages/ExpensesPage/ExpensesPage.styled.js","pages/ExpensesPage/ExpensesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const FrameContainer = styled.div`\r\n  /* background-color: transparent; */\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin: 0px auto;\r\n    padding: 24px 40px 42px;\r\n    max-width: 704px;\r\n    background-color: #fff;\r\n    border-radius: 0px 30px 30px 30px;\r\n    box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\r\n    position: relative;\r\n    margin-top: 100px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    padding: 32px 32px 61px;\r\n    max-width: 1098px;\r\n    margin-top: 48px;\r\n  }\r\n`;\r\n\r\nexport const TableAndSummaryContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n    padding: 0;\r\n    padding-top: 48px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    max-width: 1098px;\r\n    padding-top: 60px;\r\n  }\r\n`;\r\n\r\nexport const StyledHomePage = styled.div`\r\n  margin-top: 14px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin-top: 96px;\r\n  }\r\n`;\r\n\r\nexport const ReportsAndBalanceContainer = styled.div`\r\n\r\n    @media screen and (min-width: 768px) {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin: 0 auto;\r\n      margin-bottom: 60px;\r\n      margin-right: 32px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n      max-width: 1098px;\r\n      margin-bottom: 8px;\r\n      margin-right: 91px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useScreenSize } from 'hooks/useScreenSize';\r\nimport { ReportsLink } from 'components/ReportsLink/ReportsLink';\r\nimport BalanceForm from 'components/BalanceForm/BalanceForm';\r\nimport { TransactionsList } from '../../components/Expenses/TransactionsList/TransactionsList';\r\nimport {\r\n  TransactionNavMobile,\r\n  TransactionNavDesktop,\r\n} from 'components/Expenses/TransactionCategoryNav/TransactionCategoryNav';\r\n\r\nimport Form from 'components/Expenses/Form';\r\nimport { Summary } from 'components/Summary/Summary';\r\nimport { TransactionListMobile } from '../../components/TransactionListDesktop/TransactionListMobile/TransactionListMobile';\r\nimport { TransactionListDesktop } from 'components/TransactionListDesktop/TransactionListDesktop';\r\nimport { ToTransactionButton } from 'components/ToTransactionButton/ToTransactionButton';\r\nimport {\r\n  selectBalance,\r\n  selectExpenseTransactions,\r\n  selectIsLoggedIn,\r\n} from '../../redux/selectors';\r\nimport { getExpenses } from '../../redux/Transactions/operations';\r\nimport {\r\n  FrameContainer,\r\n  TableAndSummaryContainer,\r\n  StyledHomePage,\r\n  ReportsAndBalanceContainer,\r\n} from './ExpensesPage.styled';\r\nimport { CabbagesBottom } from '../../components/Background/Authorized/CabbagesBottom';\r\n\r\nconst Expenses = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const allExpenses = useSelector(selectExpenseTransactions);\r\n  const user = useSelector(selectIsLoggedIn);\r\n  const balance = useSelector(selectBalance);\r\n  const color = 'red';\r\n\r\n  const { mobileScreen, tabletScreen, desktopScreen } = useScreenSize();\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      dispatch(getExpenses());\r\n    }\r\n  }, [dispatch, user, balance]);\r\n\r\n  return (\r\n    <HelmetProvider>\r\n      <Helmet>\r\n        <title>Expenses</title>\r\n      </Helmet>\r\n      <CabbagesBottom />\r\n      {mobileScreen && <ToTransactionButton />}\r\n      <StyledHomePage>\r\n        <ReportsAndBalanceContainer>\r\n          {mobileScreen && (\r\n            <ReportsLink to=\"/reports\" state={{ from: location }} />\r\n          )}\r\n          <BalanceForm />\r\n          {!mobileScreen && (\r\n            <ReportsLink to=\"/reports\" state={{ from: location }} />\r\n          )}\r\n        </ReportsAndBalanceContainer>\r\n        {mobileScreen && <TransactionNavMobile />}\r\n\r\n        {mobileScreen && <TransactionsList />}\r\n      </StyledHomePage>\r\n      <FrameContainer>\r\n        {' '}\r\n        {!mobileScreen && <TransactionNavDesktop />}\r\n        <Form />\r\n        {mobileScreen ? (\r\n          <TransactionListMobile>\r\n            {allExpenses}\r\n            {color}\r\n          </TransactionListMobile>\r\n        ) : (\r\n          <TableAndSummaryContainer>\r\n            <TransactionListDesktop>\r\n              {allExpenses}\r\n              {color}\r\n            </TransactionListDesktop>\r\n            {desktopScreen && <Summary />}\r\n          </TableAndSummaryContainer>\r\n        )}\r\n      </FrameContainer>\r\n      {tabletScreen && <Summary />}\r\n    </HelmetProvider>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"],"names":["FrameContainer","styled","div","_templateObject","_taggedTemplateLiteral","TableAndSummaryContainer","_templateObject2","StyledHomePage","_templateObject3","ReportsAndBalanceContainer","_templateObject4","Expenses","dispatch","useDispatch","allExpenses","useSelector","selectExpenseTransactions","user","selectIsLoggedIn","balance","selectBalance","mobileScreen","tabletScreen","desktopScreen","useScreenSize","location","useLocation","useEffect","getExpenses","_jsxs","HelmetProvider","children","_jsx","Helmet","CabbagesBottom","ToTransactionButton","ReportsLink","to","state","from","BalanceForm","TransactionNavMobile","TransactionsList","TransactionNavDesktop","Form","TransactionListMobile","TransactionListDesktop","Summary"],"sourceRoot":""}